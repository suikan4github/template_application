# This is a basic workflow to help you get started with Actions

name: CTest_on_push_and_pull_request

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains  jobs called "Test-on-Linux" and "Test-on-Windows"
  Test-on-Linux:
    # Test on Ubuntu
    runs-on: ubuntu-latest

    # Configure - Build - Test
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs commands using the runners shell
      - name: Debug test on Linux
        run: |
          echo "Configure Debug, build and test"
          cd ${GITHUB_WORKSPACE}
          mkdir build_Debug
          cd build_Debug
          echo "#######################################################################"
          echo "#                         Debug build                                 #"
          echo "#######################################################################"
          cmake .. -DCMAKE_BUILD_TYPE:STRING=Debug
          cmake --build . --target all --config Debug --clean-first -j4
          ctest --rerun-failed --output-on-failure -j 4
      - name: Release test on Linux
        run: |
          echo "Configure Release, build and test"
          cd ${GITHUB_WORKSPACE}
          mkdir build_Release
          cd build_Release
          echo "#######################################################################"
          echo "#                         Release build                               #"
          echo "#######################################################################"
          cmake .. -DCMAKE_BUILD_TYPE:STRING=Release
          cmake --build . --target all --config Release --clean-first -j4
          ctest --rerun-failed --output-on-failure -j 4

  Test-on-Windows:
    # Test on Windows Server
    runs-on: windows-latest

    # Configure - Build - Test
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs commands using the runners shell
      - name: Debug test on Windows
        run: |
          echo "Configure Debug, build and test"
          cd $Env:GITHUB_WORKSPACE
          mkdir build_Debug
          cd build_Debug
          echo "#######################################################################"
          echo "#                         Debug build                                 #"
          echo "#######################################################################"
          cmake .. -DCMAKE_BUILD_TYPE:STRING=Debug
          cmake --build . --target all --config Debug --clean-first -j4
          ctest --rerun-failed --output-on-failure -j 4
      - name: Release test on Windows
        run: |
          echo "Configure Release, build and test"
          cd $Env:GITHUB_WORKSPACE
          mkdir build_Release
          cd build_Release
          echo "#######################################################################"
          echo "#                         Release build                               #"
          echo "#######################################################################"
          cmake .. -DCMAKE_BUILD_TYPE:STRING=Release
          cmake --build . --target all --config Release --clean-first -j4
          ctest --rerun-failed --output-on-failure -j 4
